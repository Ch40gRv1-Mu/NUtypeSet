{"remainingRequest":"/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js??ref--29-2!/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_cube-ui@1.12.46@cube-ui/src/common/helpers/validator/messages.js","dependencies":[{"path":"/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_cube-ui@1.12.46@cube-ui/src/common/helpers/validator/messages.js","mtime":1626627179085},{"path":"/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":1626627177379},{"path":"/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":1626627183575},{"path":"/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":1626627177138}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvbWNyL09yYml0YWxfMDcxOS9udXR5cGVzZXRfZnJvbnQtZW5kL25vZGVfbW9kdWxlcy9fQGJhYmVsX3J1bnRpbWVANy4xNC42QEBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IHsgZGVlcEFzc2lnbiB9IGZyb20gJy4uL3V0aWwnOwoKZnVuY3Rpb24gYWRkTWVzc2FnZSgpIHsKICB2YXIgTkFNRVNQQUNFID0gJ3ZhbGlkYXRvcic7CiAgdmFyIHZ1ZVByb3RvID0gdGhpcy5fYmFzZS5wcm90b3R5cGU7CiAgdmFyIGxhbmcgPSB2dWVQcm90by4kY3ViZUxhbmc7CiAgdmFyIGJhc2VNZXNzYWdlcyA9IHZ1ZVByb3RvLiRjdWJlTWVzc2FnZXNbbGFuZ11bTkFNRVNQQUNFXTsKCiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7CiAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldOwogIH0KCiAgaWYgKHR5cGVvZiBhcmdzWzBdID09PSAnc3RyaW5nJykgewogICAgYXJnc1swXSA9IF9kZWZpbmVQcm9wZXJ0eSh7fSwgYXJnc1swXSwgYXJnc1sxXSk7CiAgfQoKICBkZWVwQXNzaWduKGJhc2VNZXNzYWdlcywgYXJnc1swXSk7Cn0KCmV4cG9ydCB7IGFkZE1lc3NhZ2UgfTs="},{"version":3,"sources":["/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_cube-ui@1.12.46@cube-ui/src/common/helpers/validator/messages.js"],"names":["deepAssign","addMessage","NAMESPACE","vueProto","_base","prototype","lang","$cubeLang","baseMessages","$cubeMessages","args"],"mappings":";AAAA,SAASA,UAAT,QAA2B,SAA3B;;AAEA,SAASC,UAAT,GAA8B;AAC5B,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,SAA5B;AACA,MAAMC,IAAI,GAAGH,QAAQ,CAACI,SAAtB;AACA,MAAMC,YAAY,GAAGL,QAAQ,CAACM,aAAT,CAAuBH,IAAvB,EAA6BJ,SAA7B,CAArB;;AAJ4B,oCAANQ,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAM5B,MAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AAC/BA,IAAAA,IAAI,CAAC,CAAD,CAAJ,uBACGA,IAAI,CAAC,CAAD,CADP,EACaA,IAAI,CAAC,CAAD,CADjB;AAGD;;AAEDV,EAAAA,UAAU,CAACQ,YAAD,EAAeE,IAAI,CAAC,CAAD,CAAnB,CAAV;AACD;;AAED,SAAST,UAAT","sourcesContent":["import { deepAssign } from '../util'\n\nfunction addMessage (...args) {\n  const NAMESPACE = 'validator'\n  const vueProto = this._base.prototype\n  const lang = vueProto.$cubeLang\n  const baseMessages = vueProto.$cubeMessages[lang][NAMESPACE]\n\n  if (typeof args[0] === 'string') {\n    args[0] = {\n      [args[0]]: args[1]\n    }\n  }\n\n  deepAssign(baseMessages, args[0])\n}\n\nexport { addMessage }\n"]}]}