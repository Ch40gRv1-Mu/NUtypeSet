{"remainingRequest":"/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js??ref--29-2!/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_cube-ui@1.12.46@cube-ui/src/common/helpers/validator/rules.js","dependencies":[{"path":"/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_cube-ui@1.12.46@cube-ui/src/common/helpers/validator/rules.js","mtime":1626627179086},{"path":"/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":1626627177379},{"path":"/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":1626627183575},{"path":"/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":1626627177138}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiL1VzZXJzL21jci9PcmJpdGFsXzA3MTkvbnV0eXBlc2V0X2Zyb250LWVuZC9ub2RlX21vZHVsZXMvX0BiYWJlbF9ydW50aW1lQDcuMTQuNkBAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90eXBlb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pcy1hcnJheS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0IHsgY3JlYXRlQWRkQVBJIH0gZnJvbSAnLi4vdXRpbCc7CmltcG9ydCB7IHR5cGVzIH0gZnJvbSAnLi90eXBlcyc7CnZhciBydWxlcyA9IHsKICByZXF1aXJlZDogZnVuY3Rpb24gcmVxdWlyZWQodmFsLCBfcmVxdWlyZWQsIHR5cGUpIHsKICAgIHR5cGUgPSB0eXBlIHx8IChBcnJheS5pc0FycmF5KHZhbCkgPyAnYXJyYXknIDogX3R5cGVvZih2YWwpKTsKCiAgICBpZiAodHlwZSA9PT0gJ2FycmF5JyAmJiBBcnJheS5pc0FycmF5KHZhbCkpIHsKICAgICAgcmV0dXJuIHZhbC5sZW5ndGggPiAwOwogICAgfQoKICAgIHJldHVybiB2YWwgIT09ICcnICYmIHZhbCAhPT0gdW5kZWZpbmVkICYmIHZhbCAhPT0gbnVsbDsKICB9LAogIHR5cGU6IGZ1bmN0aW9uIHR5cGUodmFsLCBfdHlwZSkgewogICAgcmV0dXJuICF0eXBlc1tfdHlwZV0gfHwgdHlwZXNbX3R5cGVdKHZhbCk7CiAgfSwKICBtaW46IGZ1bmN0aW9uIG1pbih2YWwsIF9taW4sIHR5cGUpIHsKICAgIHR5cGUgPSB0eXBlIHx8IF90eXBlb2YodmFsKTsKCiAgICBpZiAodHlwZSA9PT0gJ251bWJlcicgfHwgdHlwZSA9PT0gJ2RhdGUnKSB7CiAgICAgIHJldHVybiBOdW1iZXIodmFsKSA+PSBfbWluOwogICAgfSBlbHNlIHsKICAgICAgcmV0dXJuIHZhbC5sZW5ndGggPj0gX21pbjsKICAgIH0KICB9LAogIG1heDogZnVuY3Rpb24gbWF4KHZhbCwgX21heCwgdHlwZSkgewogICAgdHlwZSA9IHR5cGUgfHwgX3R5cGVvZih2YWwpOwoKICAgIGlmICh0eXBlID09PSAnbnVtYmVyJyB8fCB0eXBlID09PSAnZGF0ZScpIHsKICAgICAgcmV0dXJuIE51bWJlcih2YWwpIDw9IF9tYXg7CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gdmFsLmxlbmd0aCA8PSBfbWF4OwogICAgfQogIH0sCiAgbGVuOiBmdW5jdGlvbiBsZW4odmFsLCBfbGVuLCB0eXBlKSB7CiAgICB0eXBlID0gdHlwZSB8fCBfdHlwZW9mKHZhbCk7CiAgICB2YXIgdGFyZ2V0ID0gdmFsOwoKICAgIGlmICh0YXJnZXQubGVuZ3RoID09PSB1bmRlZmluZWQpIHsKICAgICAgdGFyZ2V0ID0gdHlwZSA9PT0gJ29iamVjdCcgPyBPYmplY3Qua2V5cyh0YXJnZXQpIDogU3RyaW5nKHRhcmdldCk7CiAgICB9CgogICAgcmV0dXJuIHRhcmdldC5sZW5ndGggPT09IF9sZW47CiAgfSwKICBub3RXaGl0ZXNwYWNlOiBmdW5jdGlvbiBub3RXaGl0ZXNwYWNlKHZhbCwgY29uZmlnLCB0eXBlKSB7CiAgICByZXR1cm4gIS9eXHMrJC8udGVzdCh2YWwpOwogIH0sCiAgcGF0dGVybjogZnVuY3Rpb24gcGF0dGVybih2YWwsIF9wYXR0ZXJuLCB0eXBlKSB7CiAgICByZXR1cm4gX3BhdHRlcm4udGVzdCh2YWwpOwogIH0sCiAgY3VzdG9tOiBmdW5jdGlvbiBjdXN0b20odmFsLCBfY3VzdG9tLCB0eXBlKSB7CiAgICByZXR1cm4gX2N1c3RvbSh2YWwpOwogIH0KfTsKdmFyIGFkZFJ1bGUgPSBjcmVhdGVBZGRBUEkocnVsZXMpOwpleHBvcnQgeyBydWxlcywgYWRkUnVsZSB9Ow=="},{"version":3,"sources":["/Users/mcr/Orbital_0719/nutypeset_front-end/node_modules/_cube-ui@1.12.46@cube-ui/src/common/helpers/validator/rules.js"],"names":["createAddAPI","types","rules","required","val","type","Array","isArray","length","undefined","min","Number","max","len","target","Object","keys","String","notWhitespace","config","test","pattern","custom","addRule"],"mappings":";;;;AAAA,SAASA,YAAT,QAA6B,SAA7B;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE,kBAACC,GAAD,EAAMD,SAAN,EAAgBE,IAAhB,EAAyB;AACjCA,IAAAA,IAAI,GAAGA,IAAI,KAAKC,KAAK,CAACC,OAAN,CAAcH,GAAd,IAAqB,OAArB,WAAsCA,GAAtC,CAAL,CAAX;;AACA,QAAIC,IAAI,KAAK,OAAT,IAAoBC,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAxB,EAA4C;AAC1C,aAAOA,GAAG,CAACI,MAAJ,GAAa,CAApB;AACD;;AACD,WAAOJ,GAAG,KAAK,EAAR,IAAcA,GAAG,KAAKK,SAAtB,IAAmCL,GAAG,KAAK,IAAlD;AACD,GAPW;AAQZC,EAAAA,IAAI,EAAE,cAACD,GAAD,EAAMC,KAAN,EAAe;AACnB,WAAO,CAACJ,KAAK,CAACI,KAAD,CAAN,IAAgBJ,KAAK,CAACI,KAAD,CAAL,CAAYD,GAAZ,CAAvB;AACD,GAVW;AAWZM,EAAAA,GAAG,EAAE,aAACN,GAAD,EAAMM,IAAN,EAAWL,IAAX,EAAoB;AACvBA,IAAAA,IAAI,GAAGA,IAAI,YAAYD,GAAZ,CAAX;;AACA,QAAIC,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,MAAlC,EAA0C;AACxC,aAAOM,MAAM,CAACP,GAAD,CAAN,IAAeM,IAAtB;AACD,KAFD,MAEO;AACL,aAAON,GAAG,CAACI,MAAJ,IAAcE,IAArB;AACD;AACF,GAlBW;AAmBZE,EAAAA,GAAG,EAAE,aAACR,GAAD,EAAMQ,IAAN,EAAWP,IAAX,EAAoB;AACvBA,IAAAA,IAAI,GAAGA,IAAI,YAAYD,GAAZ,CAAX;;AACA,QAAIC,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,MAAlC,EAA0C;AACxC,aAAOM,MAAM,CAACP,GAAD,CAAN,IAAeQ,IAAtB;AACD,KAFD,MAEO;AACL,aAAOR,GAAG,CAACI,MAAJ,IAAcI,IAArB;AACD;AACF,GA1BW;AA2BZC,EAAAA,GAAG,EAAE,aAACT,GAAD,EAAMS,IAAN,EAAWR,IAAX,EAAoB;AACvBA,IAAAA,IAAI,GAAGA,IAAI,YAAYD,GAAZ,CAAX;AACA,QAAIU,MAAM,GAAGV,GAAb;;AACA,QAAIU,MAAM,CAACN,MAAP,KAAkBC,SAAtB,EAAiC;AAC/BK,MAAAA,MAAM,GAAGT,IAAI,KAAK,QAAT,GAAoBU,MAAM,CAACC,IAAP,CAAYF,MAAZ,CAApB,GAA0CG,MAAM,CAACH,MAAD,CAAzD;AACD;;AACD,WAAOA,MAAM,CAACN,MAAP,KAAkBK,IAAzB;AACD,GAlCW;AAmCZK,EAAAA,aAAa,EAAE,uBAACd,GAAD,EAAMe,MAAN,EAAcd,IAAd,EAAuB;AACpC,WAAO,CAAC,QAAQe,IAAR,CAAahB,GAAb,CAAR;AACD,GArCW;AAsCZiB,EAAAA,OAAO,EAAE,iBAACjB,GAAD,EAAMiB,QAAN,EAAehB,IAAf,EAAwB;AAC/B,WAAOgB,QAAO,CAACD,IAAR,CAAahB,GAAb,CAAP;AACD,GAxCW;AAyCZkB,EAAAA,MAAM,EAAE,gBAAClB,GAAD,EAAMkB,OAAN,EAAcjB,IAAd,EAAuB;AAC7B,WAAOiB,OAAM,CAAClB,GAAD,CAAb;AACD;AA3CW,CAAd;AA8CA,IAAMmB,OAAO,GAAGvB,YAAY,CAACE,KAAD,CAA5B;AAEA,SAASA,KAAT,EAAgBqB,OAAhB","sourcesContent":["import { createAddAPI } from '../util'\nimport { types } from './types'\n\nconst rules = {\n  required: (val, required, type) => {\n    type = type || (Array.isArray(val) ? 'array' : typeof val)\n    if (type === 'array' && Array.isArray(val)) {\n      return val.length > 0\n    }\n    return val !== '' && val !== undefined && val !== null\n  },\n  type: (val, type) => {\n    return !types[type] || types[type](val)\n  },\n  min: (val, min, type) => {\n    type = type || (typeof val)\n    if (type === 'number' || type === 'date') {\n      return Number(val) >= min\n    } else {\n      return val.length >= min\n    }\n  },\n  max: (val, max, type) => {\n    type = type || (typeof val)\n    if (type === 'number' || type === 'date') {\n      return Number(val) <= max\n    } else {\n      return val.length <= max\n    }\n  },\n  len: (val, len, type) => {\n    type = type || (typeof val)\n    let target = val\n    if (target.length === undefined) {\n      target = type === 'object' ? Object.keys(target) : String(target)\n    }\n    return target.length === len\n  },\n  notWhitespace: (val, config, type) => {\n    return !/^\\s+$/.test(val)\n  },\n  pattern: (val, pattern, type) => {\n    return pattern.test(val)\n  },\n  custom: (val, custom, type) => {\n    return custom(val)\n  }\n}\n\nconst addRule = createAddAPI(rules)\n\nexport { rules, addRule }\n"]}]}